# poetry-plugin-hook

[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/poetry-plugin-hook)](https://pypi.org/project/poetry-plugin-hook/)
[![PyPI - Version](https://img.shields.io/pypi/v/poetry-plugin-hook)](https://pypi.org/project/poetry-plugin-hook/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/poetry-plugin-hook)](https://pypi.org/project/poetry-plugin-hook/)
[![PyPI - License](https://img.shields.io/pypi/l/poetry-plugin-hook)](https://raw.githubusercontent.com/d-chris/poetry-plugin-hook/main/LICENSE)
[![GitHub - Pytest](https://img.shields.io/github/actions/workflow/status/d-chris/poetry-plugin-hook/pytest.yml?logo=github&label=pytest)](https://github.com/d-chris/poetry-plugin-hook/actions/workflows/pytest.yml)
[![GitHub - Page](https://img.shields.io/website?url=https%3A%2F%2Fd-chris.github.io%2Fpoetry-plugin-hook&up_message=pdoc&logo=github&label=documentation)](https://d-chris.github.io/poetry-plugin-hook)
[![GitHub - Release](https://img.shields.io/github/v/tag/d-chris/poetry-plugin-hook?logo=github&label=github)](https://github.com/d-chris/poetry-plugin-hook)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit)](https://raw.githubusercontent.com/d-chris/poetry-plugin-hook/main/.pre-commit-config.yaml)
[![codecov](https://codecov.io/gh/d-chris/poetry-plugin-hook/graph/badge.svg?token=RNNV7TN8WZ)](https://codecov.io/gh/d-chris/poetry-plugin-hook)

---

[`poetry`](https://python-poetry.org/) plugin to register wrapped commands to use as [`pre-commit-hooks`](https://pre-commit.com/). all hook commands return zero on success and non-zero on failure.

## install

```cmd
$ pip install poetry-plugin-hook
```

or with `poetry`

> Especially on [Windows](https://python-poetry.org/docs/cli/#self), self commands that update or remove packages may be problematic.

```cmd
$ poetry self add poetry-plugin-hook
```

## hook bump

Extends `poetry version` command, to also bump `__version__` strings in python files.

```cmd
{{ "poetry hook bump --help" | shell }}
```

## hook latest

Wrapper for `poetry show -o -T` command.

Exit code represents the number of outdated packages.

```cmd
{{ "poetry hook latest --help" | shell }}
```

## hook sync

Wrapper for `poetry install --sync` command.

With `--exit` option, the command returns the corresponding value as exit code. With it's default `--exit=any` the sum of *installs*, *updates* and *removals* is returned.

```cmd
{{ "poetry hook sync --help" | shell }}
```

## pre-commit-config

Add the following to your `.pre-commit-config.yaml` file.

```yaml
{{ ".pre-commit-example.yaml" | include }}
```

### usage

1. Make sure pre-commit is installed, see [official documentation](https://pre-commit.com/#installation).
  ```cmd
  $ pre-commit --version

    pre-commit 3.7.1
  ```
2. `cd` into your project and register hooks and install them. this may take a while.
  ```cmd
  $ pre-commit install --install-hooks

    pre-commit installed at .git\hooks\pre-commit
    pre-commit installed at .git\hooks\pre-push
  ```
3. Test the pre-push hook.
  ```cmd
  $ pre-commit run poetry-hook-latest --all-files --hook-stage pre-push

    poetry-hook-latest.......................................................Failed
    - hook id: poetry-hook-latest
    - exit code: 1

    pytest-cov 5.0.0 6.0.0 Pytest plugin for measuring coverage.
  ```
4. Test the pre-commit hooks.
  ```cmd
  $ pre-commit run poetry-hook-sync --all-files

    poetry-hook-sync.........................................................Failed
    - hook id: poetry-hook-sync
    - exit code: 1

    Installing dependencies from lock file

    Package operations: 0 installs, 1 update, 0 removals

      - Downgrading pytest-cov (6.0.0 -> 5.0.0)

    Installing the current project: poetry-plugin-hook (0.0.0)
  ```

## pre-commit-hooks

```yaml
{{ ".pre-commit-hooks.yaml" | include }}
```

## Dependencies

[![PyPI - cleo](https://img.shields.io/pypi/v/cleo?logo=pypi&logoColor=white&label=cleo)](https://pypi.org/project/cleo/)
[![PyPI - poetry](https://img.shields.io/pypi/v/poetry?logo=poetry&logoColor=white&label=poetry)](https://pypi.org/project/poetry/)

---
